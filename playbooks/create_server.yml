---
- name: "Create a LEMP stack web server for Symfony 4"
  hosts: webservers
  become: true
  environment:
    APP_ENV: test
  vars:
    type: nginx
  vars_prompt:
    - name: "type"
      prompt: "Choose what to use for a web server: (nginx/apache2)"
      private: no
      default: "{{ type }}"
    - name: "error_log_location"
      prompt: "Where to store the error log file?"
      private: no
      default: "/var/log/{{type}}/project_error.log"
    - name: "access_log_location"
      prompt: "Where to store the error log file?"
      private: no
      default: "/var/log/{{type}}/project_access.log"
  tasks:
    - apt_repository:
        repo: ppa:ondrej/php
    - name: "Install packages"
      apt: name={{item}} state="present"
      with_items:
      - mysql-server
      - php-curl
      - php-sqlite3
      - php7.2-apcu
      - php7.2-cli
      - php7.2-fpm
      - php7.2-intl
      - php7.2-mbstring
      - php7.2-mysql
      - php7.2-xml
      - php7.2-zip
      - unzip
      - zip
    - name: Run apt-get update
      apt:
        update_cache: yes
    - name: Create temp directory for Composer
      file:
        path: /var/tmp/composer
        state: directory
    - name: Get Composer
      get_url:
        url: https://getcomposer.org/installer
        dest: /var/tmp/composer/composer-setup.php
    - name: Install composer
      shell: "php /var/tmp/composer/composer-setup.php --install-dir=/usr/local/bin --filename=composer"
    - name: Delete composer installer
      file:
        path: /var/tmp/composer/composer-setup.php
        state: absent
    - name: Fail if unexpected value choice for webserver
      fail:
        msg: "Incorrect input. Expected: apache or nginx; instead got: {{ type }}"
      when: type != "nginx" and type != "apache2"
    - name: "Install the web server"
      apt: name="{{ "nginx" if type == "nginx" else "apache2" }}" state="present"
    - name: "Copy NGINX config file"
      when: type == "nginx"
      template:
        src: ../templates/serverconfig/nginx
        dest: /etc/nginx/sites-available/default
    - name: "Copy Apache2 config file"
      when: type == "apache2"
      template:
        src: ../templates/serverconfig/apache2.conf
        dest: /etc/apache2/sites-available/000-default.conf

    - name: "Create dir for project"
      file:
        path: /vagrant_dev/public
        mode: 0644
#        owner: apache
#        group: www-data
        state: directory
    - name: "Restart Apache"
      service: name=apache2 state=restarted
      when: type == "apache2"
    - name: "Restart NGINX"
      service: name=nginx state=restarted
      when: type == "nginx"
